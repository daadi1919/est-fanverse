{"ast":null,"code":"var _jsxFileName = \"/home/debian/est-fanverse/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTokenBalance, mintNFT, getMintedNFTs } from \"./utils/contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [symbol, setSymbol] = useState(\"\");\n  const [mintedNFTs, setMintedNFTs] = useState([]);\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Installez MetaMask !\");\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    const selected = accounts[0];\n    setAccount(selected);\n    const tokenData = await getTokenBalance(selected);\n    if (tokenData) {\n      setBalance(tokenData.balance);\n      setSymbol(tokenData.symbol);\n    }\n    const uris = await getMintedNFTs(selected);\n    setMintedNFTs(uris);\n  };\n  const handleMintNFT = async () => {\n    if (!account) return;\n    try {\n      const tokenURI = \"https://example.com/nft-metadata.json\";\n      const tx = await mintNFT(account, tokenURI);\n      alert(\"NFT mintÃ© avec succÃ¨s ! ðŸš€ Tx Hash : \" + tx.hash);\n      await fetch(\"http://ns3076776.ip-217-182-194.eu:4000/api/logs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          address: account,\n          action: \"minted_nft\",\n          metadata: {\n            txHash: tx.hash,\n            tokenURI\n          }\n        })\n      });\n      const uris = await getMintedNFTs(account);\n      setMintedNFTs(uris);\n    } catch (err) {\n      console.error(\"Erreur minting NFT :\", err);\n      alert(\"Erreur lors du mint du NFT\");\n    }\n  };\n  useEffect(() => {\n    connectWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenue sur EST FanVerse \\uD83E\\uDD85\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Adresse : \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Solde : \", balance, \" \", symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMintNFT,\n      style: {\n        padding: \"1rem\",\n        marginTop: \"1rem\",\n        backgroundColor: \"#e60000\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\"\n      },\n      children: \"\\uD83C\\uDFA8 Minter un NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: \"\\uD83C\\uDF89 Galerie de vos NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"1rem\"\n      },\n      children: [mintedNFTs.map((uri, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"1rem\",\n          borderRadius: \"10px\",\n          width: \"200px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uri,\n          alt: `NFT #${i + 1}`,\n          style: {\n            width: \"100%\",\n            borderRadius: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"0.5rem\"\n          },\n          children: [\"#\", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), mintedNFTs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun NFT pour le moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w+0lZxKwS6DiS+qNEUGY9YO60BE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getTokenBalance","mintNFT","getMintedNFTs","jsxDEV","_jsxDEV","App","_s","account","setAccount","balance","setBalance","symbol","setSymbol","mintedNFTs","setMintedNFTs","connectWallet","window","ethereum","alert","accounts","request","method","selected","tokenData","uris","handleMintNFT","tokenURI","tx","hash","fetch","headers","body","JSON","stringify","address","action","metadata","txHash","err","console","error","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","backgroundColor","color","border","borderRadius","display","flexWrap","gap","map","uri","i","width","src","alt","length","_c","$RefreshReg$"],"sources":["/home/debian/est-fanverse/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getTokenBalance, mintNFT, getMintedNFTs } from \"./utils/contract\";\n\nfunction App() {\n  const [account, setAccount] = useState<string | null>(null);\n  const [balance, setBalance] = useState<string | null>(null);\n  const [symbol, setSymbol] = useState<string>(\"\");\n  const [mintedNFTs, setMintedNFTs] = useState<string[]>([]);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Installez MetaMask !\");\n    const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n    const selected = accounts[0];\n    setAccount(selected);\n\n    const tokenData = await getTokenBalance(selected);\n    if (tokenData) {\n      setBalance(tokenData.balance);\n      setSymbol(tokenData.symbol);\n    }\n\n    const uris = await getMintedNFTs(selected);\n    setMintedNFTs(uris);\n  };\n\n  const handleMintNFT = async () => {\n    if (!account) return;\n    try {\n      const tokenURI = \"https://example.com/nft-metadata.json\";\n      const tx = await mintNFT(account, tokenURI);\n      alert(\"NFT mintÃ© avec succÃ¨s ! ðŸš€ Tx Hash : \" + tx.hash);\n\n      await fetch(\"http://ns3076776.ip-217-182-194.eu:4000/api/logs\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          address: account,\n          action: \"minted_nft\",\n          metadata: { txHash: tx.hash, tokenURI }\n        })\n      });\n\n      const uris = await getMintedNFTs(account);\n      setMintedNFTs(uris);\n    } catch (err) {\n      console.error(\"Erreur minting NFT :\", err);\n      alert(\"Erreur lors du mint du NFT\");\n    }\n  };\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>Bienvenue sur EST FanVerse ðŸ¦…</h1>\n      <p>Adresse : {account}</p>\n      <p>Solde : {balance} {symbol}</p>\n\n      <button\n        onClick={handleMintNFT}\n        style={{ padding: \"1rem\", marginTop: \"1rem\", backgroundColor: \"#e60000\", color: \"white\", border: \"none\", borderRadius: \"5px\" }}>\n        ðŸŽ¨ Minter un NFT\n      </button>\n\n      <h2 style={{ marginTop: \"2rem\" }}>ðŸŽ‰ Galerie de vos NFTs</h2>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"1rem\" }}>\n        {mintedNFTs.map((uri, i) => (\n          <div key={i} style={{ border: \"1px solid #ccc\", padding: \"1rem\", borderRadius: \"10px\", width: \"200px\" }}>\n            <img src={uri} alt={`NFT #${i + 1}`} style={{ width: \"100%\", borderRadius: \"5px\" }} />\n            <p style={{ marginTop: \"0.5rem\" }}>#{i + 1}</p>\n          </div>\n        ))}\n        {mintedNFTs.length === 0 && <p>Aucun NFT pour le moment.</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}